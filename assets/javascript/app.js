/* particlesJS.load(@dom-id, @path-json, @callback (optional)); */
particlesJS.load('particles-js', 'assets/particles.json', function () {
  console.log('callback - particles.js config loaded');
});



//Hide Youtube at first
$(".media-player").toggle(false);
//Script to pull YouTube playlists
function go_get() {
  // 2. This code loads the IFrame Player API code asynchronously.
  var tag = document.createElement('script');
  var base_url = 'https://www.youtube.com/embed?listType=search&list=';
  var search_field = document.getElementById('music-input').value;
  var target_url = base_url + search_field;
  var ifr = document.getElementById('music-iframe');
  ifr.src = target_url;
  return false;
}
//Display Youtube onClick 
$(".music-search-button").click(function () {
  $(".media-player").toggle(true);
});


//When DOM is loaded, clear search results area
document.addEventListener('DOMContentLoaded', function () {
  $("#modal-btn").on("click", function () {
    $('#myModal').modal(options)
  })
  function clear() {
    $(".compilation-results").empty()
  }
  //Clear function
  clear();

  //Hide compilation search areas
  $(".card-deck").toggle(false);
  //Search compilations button with onClick function
  $(document).on("click", '.compilation-search-button', function () {
    clear();
    $(".card-deck").toggle(true);
   

    // Send search term to save modal
    var userSavedTerm = $("#compilation-input").val();
    $("#user-search-term").html(userSavedTerm);


    //OpenLibrary.org
    var userSubjectSearch = $("#compilation-input").val();
    var userSubjectTest = userSubjectSearch.split(" ");
    if (userSubjectTest.length > 1) {
      $(`
        <h3>Sorry, this experimental search requires a one word search.</h3>
      `).appendTo(".book-result");
    } else {
      var uriSubjectSearch = encodeURI(userSubjectSearch);
      var queryURL = "https://openlibrary.org/subjects/" + uriSubjectSearch + ".json";

      $.ajax({
        url: queryURL,
        method: "GET"
      }).then(function (response) {
        console.log(response);
        var bookWorks = response.works;
        if (bookWorks.length === 0) {
          $(`
            <h3>Sorry, no results.</h3>
          `).appendTo(".book-result");
        } else {
          var randomBook = bookWorks[Math.floor(Math.random() * bookWorks.length)];
          var subjectBookTitle = randomBook.title;
          console.log(subjectBookTitle);
          var coverImg = randomBook.cover_id;
          var bookID = randomBook.cover_edition_key;
          var bookURL = "https://openlibrary.org/books/" + bookID;

          // sending book info to save modal
          $("#user-book").append('<a href=' + bookURL + ' target="_blank">' + subjectBookTitle + '</a>');

          $(` 
            <a href=${bookURL} target="_blank">
            <img src="https://covers.openlibrary.org/b/id/${coverImg}-M.jpg">
            <h3 class="card-title">${subjectBookTitle}</h3>
            </a>
        
            <p>Cover image lovingly delivered by <a href="https://openlibrary.org/" target="_blank">OpenLibrary.org</a></p>
          `).appendTo(".book-result");
        };
      });
    };

    //Robohash.org
    var robotSearchTerm = $("#compilation-input").val();
    var url = "https://robohash.org/" + robotSearchTerm + ".png?set=set4";
    var robotResult = $(`
      <img src="${url}" class="img-fluid robot-result" alt="Robot Image">
      <h3 class="card-title">Your Funny Picture</h3>
      <p>Creature hydroponically generated by <a href="https://robohash.org/" target="_blank">Robohash.org</a></p>
    `).appendTo(".robot-result");

    //Harvard Art Museum
    // Find all of the objects that are paintings and have the "search term" in the title
    var artSearchTerm = $('#compilation-input').val();
    var apiEndpointBaseURL = "https://api.harvardartmuseums.org/object";
    var apiKey = "902637e0-edfe-11e8-9463-0b5d77676a26";
    var queryString = $.param({
      apikey: apiKey,
      title: artSearchTerm,
      classification: "Paintings"
    });

    $.getJSON(apiEndpointBaseURL + "?" + queryString, function (data) {
      console.log(data);
      var harvardRecord = data.records;
      if (harvardRecord.length === 0) {
        $(`
          <h3>Sorry, no results.</h3>
        `).appendTo(".harvard-art-result");
      } else {
        var randomHarvardRecord = harvardRecord[Math.floor(Math.random() * harvardRecord.length)];
        if (!randomHarvardRecord.hasOwnProperty("images") || randomHarvardRecord.images.length === 0) {
          $(`
              <h3>Sorry, no results.</h3>
            `).appendTo(".harvard-art-result");
        } else {
          var randomHarvardImage = randomHarvardRecord.images[0].baseimageurl;
          var randomHarvardImageTitle = randomHarvardRecord.title;
          var randomHarvardLinkBack = randomHarvardRecord.url;

          // sending art info to save modal
          $("#user-art").append('<a href=' + randomHarvardLinkBack + ' target="_blank">' + randomHarvardImageTitle + '</a>');

          var harvardArtResult = $(`
                 <img src="${randomHarvardImage}" class="img-fluid harvard-result" alt="Static Image">
                  <h3 class="card-title">Your Inspiring Image</h3>
                  <h5><div>Title: ${randomHarvardImageTitle}</div>
                      <a href="${randomHarvardLinkBack}" target="_blank">Find out more about it here.
                      </a>
                  </h5>
                  <p>Artwork gracefully delivered by <a href="https://www.harvardartmuseums.org/" target="_blank">harvardartmuseums.org</a></p>
          `);
          harvardArtResult.appendTo(".harvard-art-result");
        };  
      };
    });

    // Person search within objects
    var personQueryString = $.param({
      apikey: apiKey,
      person: artSearchTerm,
    });
    $.getJSON(apiEndpointBaseURL + "?" + personQueryString, function (data) {
      console.log(data);
      var harvardRecord = data.records;
      if (harvardRecord.length === 0) {
        $(`
            <h3>Sorry, no person with that name.</h3>
          `).appendTo(".harvard-person-result");
      } else {
        var randomHarvardRecord = harvardRecord[Math.floor(Math.random() * harvardRecord.length)];
        var personRecord = randomHarvardRecord.people[0];
        var personName = personRecord.displayname;
        var personBirthplace = personRecord.birthplace;
        var personCulture = personRecord.culture;
        var personRole = personRecord.role;
        var workURL = randomHarvardRecord.url;

        // sending person info to save modal
        $("#user-person").append('<a href=' + workURL + ' target="_blank">' + personName + '</a>');

        var harvardPersonResult = $(`
              <h3 class="card-title">Your Inspiring Person</h3>
              <h5><div>Name: ${personName}</div>
                  <div>Birthplace: ${personBirthplace}</div>
                  <div>Culture: ${personCulture}</div>
                  <div>Role: ${personRole}</div>
                  <a href="${workURL}" target="_blank">Find out more about this person here.
                  </a>
              </h5>
              <p>Person highlight brought to you by <a href="https://www.harvardartmuseums.org/" target="_blank">harvardartmuseums.org</a></p>
          `)
        harvardPersonResult.appendTo(".harvard-person-result");
      }
    }); //end Person search


    //Sculpture search within objects
    var sculptureQueryString = $.param({
      apikey: apiKey,
      title: artSearchTerm,
      classification: "Sculpture",
    })
    $.getJSON(apiEndpointBaseURL + "?" + sculptureQueryString, function (data) {
      console.log(data);
      var harvardRecord = data.records;
      if (harvardRecord.length === 0) {
        $(`
            <h3>Sorry, no results.</h3>
          `).appendTo(".harvard-sculpture-result");
      } else {
        var randomHarvardRecord = harvardRecord[Math.floor(Math.random() * harvardRecord.length)];
          if (!randomHarvardRecord.hasOwnProperty("images") || randomHarvardRecord.images.length === 0) {
            $(`
                <h3>Sorry, no results.</h3>
              `).appendTo(".harvard-sculpture-result");
          } else {
            var sculptureImage = randomHarvardRecord.images[0].baseimageurl;
            var sculptureCulture = randomHarvardRecord.culture;
            var sculptureTitle = randomHarvardRecord.title;
            // $("#user-sculpture").html(sculptureTitle);
            var sculptureURL = randomHarvardRecord.url;

            // sending sculpture info to save modal
            $("#user-sculpture").append('<a href=' + sculptureURL + ' target="_blank">' + sculptureTitle + '</a>');

            var harvardSculptureResult = $(`
              <img src="${sculptureImage}" class="img-fluid harvard-result" alt="Static Image">
              <h3 class="card-title">Your Inspiring 3D Object</h3>
              <h5><div>Title: ${sculptureTitle}</div>
                <div>Culture: ${sculptureCulture}</div>
                <a href="${sculptureURL}" target="_blank">Find out more about this sculpture here.
                </a>
              </h5>
              <p>3D-ness brought to you by <a href="https://www.harvardartmuseums.org/" target="_blank">harvardartmuseums.org</a></p>
            `)
            harvardSculptureResult.appendTo(".harvard-sculpture-result");
          };
      }; 
    });//end Sculpture search

    //end of Harvard Art Museum

    //Bored API, makes suggestions of stuff to do
    var urlBored = "https://www.boredapi.com/api/activity/";
    $.ajax({
      url: urlBored,
      method: "GET",
    }).then(function (response) {
      console.log(response);
      var boredActivity = response.activity;
      var boredResult = $(`
        <img src="assets/images/try-something-different2.png" class="img-fluid">
        <h3 class="card-title">A suggestion:</h3>
        <h5>${boredActivity}</h5>
        <p>Suggestion lovingly delivered by <a href="https://www.boredapi.com/" target="_blank">Boredapi.com</a></p>
     `);
      boredResult.appendTo(".bored-result");
    });

  }); //end of search compilation onClick function
}); //end of eventListener for DOM loading


// Initialize Firebase
var config = {
  apiKey: "AIzaSyDahpCBh75i8lWv0Rb-m2EK9t2nvyC2rik",
  authDomain: "this-is-a-test-bb2be.firebaseapp.com",
  databaseURL: "https://this-is-a-test-bb2be.firebaseio.com",
  projectId: "this-is-a-test-bb2be",
  storageBucket: "this-is-a-test-bb2be.appspot.com",
  messagingSenderId: "890505952792"
};
firebase.initializeApp(config);

var database = firebase.database();

// Save user search term and comment
$("#save-button").on("click", function (event) {
  event.preventDefault();

  var userSavedTerm = $("#user-search-term").html();
  var userSavedBook = $("#user-book").html();
  // var userSavedBookUrl = 
  var userSavedPerson = $("#user-person").html();
  var userSavedArt = $("#user-art").html();
  var userSavedSculpture = $("#user-sculpture").html();

  var userSavedComment = $("#user-comment").val().trim();
  console.log(userSavedTerm);
  console.log(userSavedComment);

  var newUserSave = {
    searchTerm: userSavedTerm,
    book: userSavedBook,
    person: userSavedPerson,
    art: userSavedArt,
    sculpture: userSavedSculpture,
    comment: userSavedComment
  };

  database.ref().push(newUserSave);
});

// Add previous comments to Save Modal
database.ref().on("child_added", function (childSnapshot) {
  console.log(childSnapshot.val());
  var snap = childSnapshot.val();

  var prevSearchTerm = snap.searchTerm;
  var prevBook = snap.book;
  var prevPerson = snap.person;
  var prevArt = snap.art;
  var prevSculpture = snap.sculpture;
  var prevComment = snap.comment;

  console.log(prevSearchTerm);
  console.log(prevComment);

  $(`
    <tr>
      <td>${prevSearchTerm}</td>
      <td>${prevBook}</td>
      <td>${prevPerson}</td>
      <td>${prevArt}</td>
      <td>${prevSculpture}</td>
      <td>${prevComment}</td>
    </tr>  
  `).prependTo('#past-searches');

});
